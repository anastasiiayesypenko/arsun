{"version":3,"sources":["assets/page2.jpg","assets/page3.jpg","assets/page4.jpg","assets/page5.jpg","assets/page6.jpg","assets/page7.jpg","assets/about-picture.jpg","assets/Alina.jpg","assets/Dana.jpg","assets/Dasha.jpg","assets/Nastiia.jpg","components/styled/theme.js","components/Layout/Layout.js","components/VocabularyPages/Slider.js","components/VocabularyPages/VocabularyPages.js","pages/main/CorrelationTable.js","pages/main/LiteratureTable.js","pages/main/Stepper.js","pages/main/Article.js","pages/introductory/Stepper.js","pages/introductory/PrefaceTable.js","pages/marks/MarksTable.js","pages/participants/ParticipantCard.js","pages/participants/Participants.js","pages/corpus/CorpusRow.js","pages/corpus/CorpusTable.js","pages/wordCombinations/WordCombinationsRow.js","pages/wordCombinations/WordCombinationsTable.js","pages/wordIndex/WordIndexRow.js","pages/wordIndex/WordIndexTable.js","components/Routing/Routing.js","App.js","index.js"],"names":["module","exports","theme","createMuiTheme","typography","fontFamily","join","palette","primary","main","contrastText","secondary","light","breakpoints","lg","contrastThreshold","tonalOffset","mainMenu","icon","color","title","path","additionalMenu","useStyles","makeStyles","root","display","background","appBar","boxShadow","transition","transitions","create","easing","sharp","duration","leavingScreen","height","appBarShift","width","marginLeft","easeOut","enteringScreen","appBarLittle","appBarlittleShift","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","border","drawerPaperSmall","textAlign","drawerHeader","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","innerBody","margin","borderRadius","overflow","innerBodyShift","divider","time","fontWeight","up","pageName","link","textDecoration","Layout","children","open","setOpen","isLarge","useMediaQuery","isSmall","classes","useTheme","className","CssBaseline","AppBar","position","clsx","appBarlittle","Toolbar","Grid","item","xs","xl","IconButton","aria-label","onClick","edge","Typography","variant","noWrap","Paper","moment","format","style","Drawer","anchor","paper","direction","Divider","List","map","to","key","ListItem","button","ListItemIcon","ListItemText","image","objectFit","vocabularyPage","Slider","useState","imageNumber","setImageNumber","imagePages","page","src","Page1","alt","number","Page2","Page3","Page4","Page5","Page6","Fade","in","timeout","elevation","fontSize","vocabularyBox","overflowY","overflowX","papers","flexWrap","wordBreak","StyledChip","styled","Chip","PageWithoutScroll","div","PagesCarousel","md","avatar","opacity","top","right","label","chip","clickable","window","table","head","backgroundColor","container","createRow","name","db","rows","SpanningTable","TableContainer","component","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","row","rowSpan","StyledTableCell","withStyles","body","StyledTableRow","default","createData","id","CustomizedTables","scope","instructions","marginTop","marginBottom","ArticleStepper","refs","React","activeStep","setActiveStep","steps","text","ref","purpose","correlation","manage","enters","literature","StyledStepper","alternativeLabel","nonLinear","index","StyledStep","current","scrollIntoView","behavior","block","handleScroll","StepLabel","Stepper","Step","StyledDivider","Article","purposeRef","useRef","correlationRef","manageRef","entersRef","literatureRef","textIndent","header","cursor","refsList","lineHeight","gutterBottom","CorrelationImage","stepper","backButton","HorizontalLabelPositionBelowStepper","handleClick","minWidth","tableName","verticalAlign","tableCell","ID","preface","Object","values","PrefaceTable","0","1","2","3","4","5","6","useStyles1","TablePaginationActions","props","count","rowsPerPage","onChangePage","event","disabled","Math","ceil","max","calories","fat","abbreviations","useStyles2","tableContainer","StyledTableContainer","prop","MarksTable","setPage","setRowsPerPage","slice","TableFooter","TablePagination","rowsPerPageOptions","value","length","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","media","paddingTop","expand","transform","shortest","expandOpen","ParticipantCard","imageSrc","description","Card","CardHeader","Avatar","split","subheader","CardMedia","CardContent","gridItem","grid","CenteredGrid","sm","AlinaImg","DanaImg","DashaImg","NastiiaImg","cell","CorpusRow","rowOpen","setRowOpen","lsvRow","gramDict","find","ID_slova","sixRow","corpus6","filter","sevenRow","corpus7","newDefRows","newDef","oldDefRows","oldDef","syntagmRows","syntagm","register","uuidv4","undefined","replace","truncate","separator","gram","href","adresa","includes","word","paradygm","epidygm","corpus","CorpusTable","isRowVisibleId","setRowVisibleId","WordCombinationsRow","openedRow","setopenedRow","combinations","id_head_slovospoluka","kontext","pryklad","drzerelo","corpWord","combWord","WordIndexRow","wordIndex","deryvat","LightBox","App","pathname","useLocation","lightBox","flexDirection","exact","Grow","WordCombinationsTable","WordIndexTable","pages","StyledLayout","Root","ThemeProvider","basename","Routing","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9a62c61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/page2.7fc2ad88.jpg\";","module.exports = __webpack_public_path__ + \"static/media/page3.a47dafc6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/page4.8676d7dd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/page5.bc2c1aad.jpg\";","module.exports = __webpack_public_path__ + \"static/media/page6.ae9a96b7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/page7.e2676f06.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about-picture.f52b2968.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Alina.78ad68b0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dana.24c1d0de.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Dasha.94177d9f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Nastiia.a38937d7.jpg\";","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      \"Didact Gothic\",\r\n      \"Comfortaa\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n  },\r\n  palette: {\r\n    primary: {\r\n      // light: will be calculated from palette.primary.main,\r\n      main: \"#012431\",\r\n      // dark: will be calculated from palette.primary.main,\r\n      // contrastText: will be calculated to contrast with palette.primary.main\r\n      contrastText: \"#fff\",\r\n    },\r\n    secondary: {\r\n      light: \"#f2f8f1\",\r\n      main: \"#f2f8f1\",\r\n      // dark: will be calculated from palette.secondary.main,\r\n      contrastText: \"#9bb4c5\",\r\n    },\r\n    breakpoints: {\r\n      lg: 1100\r\n    },\r\n    // Used by `getContrastText()` to maximize the contrast between\r\n    // the background and the text.\r\n    contrastThreshold: 3,\r\n    // Used by the functions below to shift a color's luminance by approximately\r\n    // two indexes within its tonal palette.\r\n    // E.g., shift from Red 500 to Red 300 or Red 700.\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n\r\nexport default theme;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport HomeRoundedIcon from \"@material-ui/icons/HomeRounded\";\r\nimport GroupRoundedIcon from \"@material-ui/icons/GroupRounded\";\r\nimport MenuBookRounded from \"@material-ui/icons/MenuBookRounded\";\r\nimport ListAltRoundedIcon from \"@material-ui/icons/ListAltRounded\";\r\nimport CollectionsBookmarkRoundedIcon from \"@material-ui/icons/CollectionsBookmarkRounded\";\r\nimport ArtTrackRoundedIcon from \"@material-ui/icons/ArtTrackRounded\";\r\nimport DescriptionRoundedIcon from \"@material-ui/icons/DescriptionRounded\";\r\nimport moment from \"moment\";\r\nimport { Paper, Grid } from \"@material-ui/core\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport InsertPhotoIcon from \"@material-ui/icons/InsertPhoto\";\r\nimport TodayIcon from \"@material-ui/icons/Today\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst mainMenu = [\r\n  {\r\n    icon: <HomeRoundedIcon color=\"secondary\" />,\r\n    title: \"Головна\",\r\n    path: \"/\",\r\n  },\r\n  {\r\n    icon: <MenuBookRounded color=\"secondary\" />,\r\n    title: \"Корпус словника\",\r\n    path: \"/corpus\",\r\n  },\r\n  {\r\n    icon: <ListAltRoundedIcon color=\"secondary\" />,\r\n    title: \"Індекс слів\",\r\n    path: \"/index/words\",\r\n  },\r\n  {\r\n    icon: <DescriptionRoundedIcon color=\"secondary\" />,\r\n    title: \"Індекс словосполук\",\r\n    path: \"/index/wordCombinations\",\r\n  },\r\n];\r\n\r\nconst additionalMenu = [\r\n  {\r\n    icon: <GroupRoundedIcon color=\"secondary\" />,\r\n    title: \"Учасники проекту\",\r\n    path: \"/participants\",\r\n  },\r\n  {\r\n    icon: <ArtTrackRoundedIcon color=\"secondary\" />,\r\n    title: \"Передмова\",\r\n    path: \"/introductory\",\r\n  },\r\n  {\r\n    icon: <CollectionsBookmarkRoundedIcon color=\"secondary\" />,\r\n    title: \"Умовні позначення\",\r\n    path: \"/marks\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    background: \"linear-gradient(to bottom, #012431, #9bb4c5)\",\r\n  },\r\n  appBar: {\r\n    boxShadow: \"none\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    height: 50,\r\n    background: \"transparent\",\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  appBarLittle: {\r\n    boxShadow: \"none\",\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    height: 50,\r\n    background: \"transparent\",\r\n  },\r\n  appBarlittleShift: {\r\n    display: \"none\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    background: \"linear-gradient(to bottom, #012431, #9bb4c5)\",\r\n    width: drawerWidth,\r\n    border: \"none\",\r\n    color: theme.palette.primary.contrastText,\r\n  },\r\n  drawerPaperSmall: {\r\n    background: \"linear-gradient(to bottom, #012431, #9bb4c5)\",\r\n    border: \"none\",\r\n    color: theme.palette.primary.contrastText,\r\n    textAlign: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n    color: theme.palette.primary.contrastText,\r\n    height: 50,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: 0,\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n    background: \"linear-gradient(to bottom, #012431, #9bb4c5)\",\r\n    height: \"100vh\",\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n  innerBody: {\r\n    margin: \"0 20px\",\r\n    background: theme.palette.primary.contrastText,\r\n    height: \"calc(100vh - 80px)\",\r\n    width: \"calc(100vw - 40px)\",\r\n    borderRadius: 20,\r\n    overflow: \"auto\",\r\n  },\r\n  innerBodyShift: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    width: `calc(100vw - ${drawerWidth}px - 40px)`,\r\n  },\r\n  divider: {\r\n    background: \"#f2f8f1\",\r\n  },\r\n  time: {\r\n    boxShadow: \"none\",\r\n    fontWeight: 700,\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: 3,\r\n    borderRadius: \"10px\",\r\n    color: \"#9bb4c5\",\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      width: \"80%\",\r\n    },\r\n  },\r\n  pageName: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  link: {\r\n    color: theme.palette.secondary.light,\r\n    textDecoration: \"none\",\r\n  },\r\n}));\r\n\r\nconst Layout = ({ children, open, setOpen }) => {\r\n  const isLarge = useMediaQuery(\"(min-width:1200px)\");\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={\r\n          isSmall\r\n            ? clsx(classes.appBarlittle, {\r\n                [classes.appBarlittleShift]: open,\r\n              })\r\n            : clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n              })\r\n        }\r\n      >\r\n        <Toolbar>\r\n          <Grid item xs={10} xl={11} className={classes.pageName}>\r\n            <IconButton\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              edge=\"start\"\r\n              color=\"secondary\"\r\n              className={clsx(classes.menuButton, open && classes.hide)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" noWrap>\r\n              {isSmall ? \"Арсун\" : 'Електронна версія словника \"АРСУН\"'}\r\n            </Typography>\r\n          </Grid>\r\n          {isLarge && (\r\n            <Grid item xs={2} xl={1}>\r\n              <Paper className={classes.time}>\r\n                {moment().format(\"DD MMMM YYYY\")}\r\n                <TodayIcon style={{ padding: \"0 0 0 5px\" }} />\r\n              </Paper>\r\n            </Grid>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: isSmall ? classes.drawerPaperSmall : classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose} color=\"secondary\">\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Divider className={classes.divider} />\r\n        <List>\r\n          {mainMenu.map((item) => (\r\n            <NavLink to={item.path} className={classes.link} key={item.title}>\r\n              <ListItem\r\n                button\r\n                key={item.title}\r\n                onClick={() => isSmall && setOpen(false)}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n              </ListItem>\r\n            </NavLink>\r\n          ))}\r\n        </List>\r\n        <Divider className={classes.divider} />\r\n        <List>\r\n          {additionalMenu.map((item) => (\r\n            <NavLink to={item.path} className={classes.link} key={item.title}>\r\n              <ListItem\r\n                button\r\n                key={item.title}\r\n                onClick={() => isSmall && setOpen(false)}\r\n              >\r\n                <ListItemIcon>{item.icon}</ListItemIcon>\r\n                <ListItemText primary={item.title} />\r\n              </ListItem>\r\n            </NavLink>\r\n          ))}\r\n          {!isLarge && (\r\n            <NavLink\r\n              to=\"/pages\"\r\n              className={classes.link}\r\n              key=\"Відскановані сторінки\"\r\n            >\r\n              <ListItem\r\n                button\r\n                key={\"Відскановані сторінки\"}\r\n                onClick={() => isSmall && setOpen(false)}\r\n              >\r\n                <ListItemIcon>\r\n                  <InsertPhotoIcon color=\"secondary\" />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Відскановані сторінки\" />\r\n              </ListItem>\r\n            </NavLink>\r\n          )}\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <div\r\n          className={clsx(classes.innerBody, {\r\n            [classes.innerBodyShift]: open,\r\n          })}\r\n        >\r\n          {children}\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Paper, Fade } from \"@material-ui/core\";\r\nimport ArrowLeftRoundedIcon from \"@material-ui/icons/ArrowLeftRounded\";\r\nimport ArrowRightRoundedIcon from \"@material-ui/icons/ArrowRightRounded\";\r\nimport FiberManualRecordRoundedIcon from \"@material-ui/icons/FiberManualRecordRounded\";\r\n\r\nimport Page1 from \"../../assets/page2.jpg\";\r\nimport Page2 from \"../../assets/page3.jpg\";\r\nimport Page3 from \"../../assets/page4.jpg\";\r\nimport Page4 from \"../../assets/page5.jpg\";\r\nimport Page5 from \"../../assets/page6.jpg\";\r\nimport Page6 from \"../../assets/page7.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  image: {\r\n    objectFit: \"contain\",\r\n    height: \"100%\",\r\n    width: \"calc(100% - 120px)\",\r\n    borderRadius: 15,\r\n  },\r\n  paper: {\r\n    height: \"50vh\",\r\n    overflow: \"hidden\",\r\n    boxShadow: \"none\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  vocabularyPage: {\r\n    textAlign: \"center\",\r\n    padding: \"0 5px\",\r\n  },\r\n  title: {\r\n    margin: \"10px auto\",\r\n    background: theme.palette.primary.contrastText,\r\n    color: \"#0a5268\",\r\n    borderRadius: 15,\r\n    border: `1px solid ${theme.palette.secondary.contrastText}`,\r\n    padding: 5,\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nconst Slider = () => {\r\n  const classes = useStyles();\r\n  const [imageNumber, setImageNumber] = useState(1);\r\n  const imagePages = [\r\n    {\r\n      page: <img src={Page1} alt={\"page\"} className={classes.image} />,\r\n      number: 1,\r\n    },\r\n    {\r\n      page: <img src={Page2} alt={\"page\"} className={classes.image} />,\r\n      number: 2,\r\n    },\r\n    {\r\n      page: <img src={Page3} alt={\"page\"} className={classes.image} />,\r\n      number: 3,\r\n    },\r\n    {\r\n      page: <img src={Page4} alt={\"page\"} className={classes.image} />,\r\n      number: 4,\r\n    },\r\n    {\r\n      page: <img src={Page5} alt={\"page\"} className={classes.image} />,\r\n      number: 5,\r\n    },\r\n    {\r\n      page: <img src={Page6} alt={\"page\"} className={classes.image} />,\r\n      number: 6,\r\n    },\r\n  ];\r\n  return (\r\n    <div className={classes.vocabularyPage}>\r\n      <h2 className={classes.title}>Відскановані сторінки словника:</h2>\r\n\r\n      {imagePages.map(\r\n        (item) =>\r\n          imageNumber === item.number && (\r\n            <Fade\r\n              in={imageNumber === item.number}\r\n              timeout={500}\r\n              key={item.number}\r\n            >\r\n              <Paper elevation={4} className={classes.paper}>\r\n                <ArrowLeftRoundedIcon\r\n                  style={{\r\n                    fontSize: 60,\r\n                    color: imageNumber > 1 ? \"#0a5268 \" : \"grey\",\r\n                  }}\r\n                  onClick={() =>\r\n                    imageNumber > 1 && setImageNumber(imageNumber - 1)\r\n                  }\r\n                />\r\n                {item.page}\r\n                <ArrowRightRoundedIcon\r\n                  onClick={() =>\r\n                    imageNumber < 6 && setImageNumber(imageNumber + 1)\r\n                  }\r\n                  style={{\r\n                    fontSize: 60,\r\n                    color: imageNumber < 6 ? \"#0a5268 \" : \"grey\",\r\n                  }}\r\n                />\r\n              </Paper>\r\n            </Fade>\r\n          )\r\n      )}\r\n\r\n      {imagePages.map((item) => (\r\n        <FiberManualRecordRoundedIcon\r\n          key={item.number}\r\n          style={{\r\n            color: \"#0a5268\",\r\n          }}\r\n          onClick={() => setImageNumber(item.number)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport AccountBalanceRoundedIcon from \"@material-ui/icons/AccountBalanceRounded\";\r\nimport ContactMailRoundedIcon from \"@material-ui/icons/ContactMailRounded\";\r\nimport AlternateEmailRoundedIcon from \"@material-ui/icons/AlternateEmailRounded\";\r\nimport Slider from \"./Slider\";\r\nimport styled from \"styled-components\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  vocabularyBox: {\r\n    height: \"100%\",\r\n    overflowY: \"auto\",\r\n    overflowX: \"hidden\",\r\n  },\r\n  papers: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    wordBreak: \"break-word\",\r\n  },\r\n}));\r\n\r\nconst PagesCarousel = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <PageWithoutScroll className={classes.vocabularyBox}>\r\n      <Slider />\r\n      <div className={classes.papers}>\r\n        <Grid item md={5}>\r\n          <StyledChip\r\n            style={{ position: \"relative\", width: '97%' }}\r\n            avatar={\r\n              <AccountBalanceRoundedIcon\r\n                style={{\r\n                  position: \"absolute\",\r\n                  color: \"#012431\",\r\n                  background: \"#e6e6e6\",\r\n                  opacity: \"0.1\",\r\n                  width: 40,\r\n                  height: 40,\r\n                  top: 5,\r\n                  right: 5,\r\n                }}\r\n              />\r\n            }\r\n            label=\"Кафедра прикладної лінгвістики та української мови\"\r\n            className={classes.chip}\r\n          />\r\n        </Grid>\r\n        <Grid item md={5}>\r\n          <StyledChip\r\n            style={{ position: \"relative\", width: '97%' }}\r\n            avatar={\r\n              <AlternateEmailRoundedIcon\r\n                style={{\r\n                  position: \"absolute\",\r\n                  color: \"#012431\",\r\n                  background: \"#e6e6e6\",\r\n                  opacity: \"0.1\",\r\n                  width: 40,\r\n                  height: 40,\r\n                  top: 5,\r\n                  right: 5,\r\n                }}\r\n              />\r\n            }\r\n            label=\"Лінгвістичний портал університету: www.mova.info\"\r\n            clickable\r\n            onClick={() => window.open(\"http://www.mova.info/\", \"_blank\")}\r\n            className={classes.chip}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={10}>\r\n          <StyledChip\r\n            style={{ position: \"relative\", width: '95%', margin: '0 auto', display: \"flex\", justifyContent: \"center\" }}\r\n            avatar={\r\n              <ContactMailRoundedIcon\r\n                style={{\r\n                  position: \"absolute\",\r\n                  color: \"#012431\",\r\n                  background: \"#e6e6e6\",\r\n                  opacity: \"0.1\",\r\n                  width: 40,\r\n                  height: 40,\r\n                  top: 5,\r\n                  right: 10,\r\n                }}\r\n              />\r\n            }\r\n            label=\"Наша сторінка у facebook: www.facebook.com/philolog.knu.ua/\"\r\n            clickable\r\n            onClick={() =>\r\n              window.open(\"https://www.facebook.com/philolog.knu.ua/\", \"_blank\")\r\n            }\r\n            className={classes.chip}\r\n          />\r\n        </Grid>\r\n      </div>\r\n    </PageWithoutScroll>\r\n  );\r\n};\r\n\r\nconst StyledChip = styled(Chip)`\r\n  height: fit-content;\r\n  min-height: 48px;\r\n  padding: 10px 0;\r\n  span {\r\n    white-space: normal;\r\n  }\r\n  margin: 5px;\r\n  background: #e6e6e6;\r\n  color: #012431;\r\n`;\r\n\r\nconst PageWithoutScroll = styled.div`\r\n  ::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n`;\r\n\r\nexport default PagesCarousel;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    overflow: \"hidden\",\r\n    margin: \"0px auto\",\r\n  },\r\n  head: {\r\n    backgroundColor: \"#e6e6e6\",\r\n    fontWeight: 800,\r\n    color: \"#012431\",\r\n  },\r\n  container: {\r\n    margin: \"20px 0\"\r\n  }\r\n});\r\n\r\nfunction createRow(name, db) {\r\n  return { name, db };\r\n}\r\n\r\nconst rows = [\r\n  createRow(\"Передмова\", 'БД \"база_передмови\"'),\r\n  createRow(\"Умовні позначення у форматі статті\", 'БД \"умовні_позначення\"'),\r\n  createRow(\"Умовні скорочення назв джерел\", 'БД \"умовні_скорочення\"'),\r\n];\r\n\r\nexport default function SpanningTable() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <TableContainer component={Paper} className={classes.container}>\r\n      <Table className={classes.table} aria-label=\"spanning table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"center\" colSpan={2} className={classes.head}>\r\n              Таблиця 1. Кореляція зон інфологічної та даталогічної моделей\r\n            </TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Інфологічна модель Словника</TableCell>\r\n            <TableCell>\r\n              Даталогічна модель електронної версії Словника\r\n            </TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.name}>\r\n              <TableCell>{row.name}</TableCell>\r\n              <TableCell>{row.db}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n\r\n          <TableRow>\r\n            <TableCell>Корпус словника</TableCell>\r\n            <TableCell rowSpan={3}>БД \"корпусСловника\"</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Індекс слів</TableCell>\r\n          </TableRow>\r\n          <TableRow>\r\n            <TableCell>Індекс словосполук</TableCell>\r\n          </TableRow>\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#e6e6e6\",\r\n    fontWeight: 800,\r\n    color: \"#012431\",\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    \"&:nth-of-type(odd)\": {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(id, name) {\r\n  return { id, name };\r\n}\r\n\r\nconst rows = [\r\n  createData(\r\n    1,\r\n    \"Активні ресурси сучасної української номінації: Ідеографічний словник нової лексики / Є. А. Карпіловська, Л. П. Кислюк, Н. Ф. Клименко, В. І. Критська, Т. К. Пуздирєва, Ю. В. Романюк; Відп. ред. Є. А. Карпіловська. – К.: ТОВ «КММ», 2013. 416 с.\"\r\n  ),\r\n  createData(\r\n    2,\r\n    \"Граматичний словник української літературної мови. Словозміна / В. І. Критська, Т. І. Недозим, Л. В. Орлова, Т. К. Пуздирєва, Ю. В. Романюк; Відп. ред. Н. Ф. Клименко. – К.: Видавничий дім Дмитра Бураго, 2011. 760 с.\"\r\n  ),\r\n  createData(\r\n    3,\r\n    \"Граматичний словник української мови. – Режим доступу: http://www.mova.info/grmasl.aspx.\"\r\n  ),\r\n  createData(\r\n    4,\r\n    \"Колодяжная Л. И. Структура словарного текста в аспекте машинной лексикографии: автореф. дис. ...канд.филол.наук. – М., 1986. 23 с.\"\r\n  ),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    overflow: \"hidden\",\r\n    margin: \"0 auto\",\r\n  },\r\n  container: {\r\n    margin: \"20px 0\",\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableContainer component={Paper} className={classes.container}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell colSpan={2}>Література</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow key={row.id}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n                {row.id}\r\n              </StyledTableCell>\r\n              <StyledTableCell>{row.name}</StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport styled from \"styled-components\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    padding: 5,\r\n    overflow: \"auto\",\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport default function ArticleStepper({ refs }) {\r\n  const classes = useStyles();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = [\r\n    { text: \"Мета\", ref: refs.purpose },\r\n    { text: \"Кореляція зон та баз даних\", ref: refs.correlation },\r\n    { text: \"Систематизація текстових даних \", ref: refs.manage },\r\n    { text: \"Входи в електронний словник\", ref: refs.enters },\r\n    { text: \"Література\", ref: refs.literature },\r\n  ];\r\n\r\n  const handleScroll = (index, ref) => {\r\n    setActiveStep(index);\r\n    ref.current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StyledStepper\r\n      activeStep={activeStep}\r\n      alternativeLabel\r\n      nonLinear\r\n      className={classes.root}\r\n    >\r\n      {steps.map((label, index) => (\r\n        <StyledStep\r\n          key={label.text}\r\n          onClick={() => handleScroll(index, label.ref)}\r\n        >\r\n          <StepLabel>{label.text}</StepLabel>\r\n        </StyledStep>\r\n      ))}\r\n    </StyledStepper>\r\n  );\r\n}\r\n\r\nconst StyledStepper = styled(Stepper)`\r\n  ::-webkit-scrollbar {\r\n    height: 3px;\r\n  }\r\n`;\r\n\r\nconst StyledStep = styled(Step)`\r\n  .MuiStepIcon-active {\r\n    fill: #012431 !important;\r\n  }\r\n  .MuiStepIcon-root {\r\n    fill: #9bb4c5;\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Divider, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport CorrelationTable from \"./CorrelationTable\";\r\nimport LiteratureTable from \"./LiteratureTable\";\r\nimport CorrelationImage from \"../../assets/about-picture.jpg\";\r\nimport ArticleStepper from \"./Stepper\";\r\n\r\n\r\n\r\nconst Article = () => {\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n\r\n  const purposeRef = useRef();\r\n  const correlationRef = useRef();\r\n  const manageRef = useRef();\r\n  const entersRef = useRef();\r\n  const literatureRef = useRef();\r\n\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      width: isSmall ? \"90%\" : \"92%\",\r\n  \r\n      textAlign: \"center\",\r\n      margin: \"0 auto\",\r\n    },\r\n    text: {\r\n      textIndent: \"40px\",\r\n      textAlign: \"justify\",\r\n    },\r\n    image: {\r\n      objectFit: \"cover\",\r\n      width: \"90%\",\r\n    },\r\n    header: {\r\n      overflow: \"hidden\",\r\n    },\r\n    icon: {\r\n      cursor: \"pointer\",\r\n      textAlign: \"right\",\r\n      background: \"#fff\",\r\n      fontSize: 20,\r\n    },\r\n  });\r\n\r\n  const classes = useStyles();\r\n\r\n  const refsList = {\r\n    purpose: purposeRef,\r\n    correlation: correlationRef,\r\n    manage: manageRef,\r\n    enters: entersRef,\r\n    literature: literatureRef,\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography\r\n        variant=\"h6\"\r\n        style={{\r\n          marginTop: isSmall ? 10 : 25,\r\n          fontWeight: 500,\r\n          fontSize: isSmall ? \"16px\" : \"21px\",\r\n          lineHeight: isSmall ? \"20px\" : \"23px\",\r\n        }}\r\n        gutterBottom\r\n      >\r\n        Бази данних елекстронної версії словника\r\n      </Typography>\r\n      <Typography\r\n        variant=\"h6\"\r\n        gutterBottom\r\n        style={{\r\n          marginBottom: isSmall ? 20 : 30,\r\n          fontWeight: 500,\r\n          fontSize: isSmall ? \"17px\" : \"25px\",\r\n          lineHeight: \"30px\",\r\n        }}\r\n      >\r\n        «АКТИВНІ РЕСУРСИ СУЧАСНОЇ УКРАЇНСЬКОЇ НОМІНАЦІЇ»\r\n      </Typography>\r\n      {!isSmall && <ArticleStepper refs={refsList} />}\r\n      <StyledDivider style={{ marginTop: 10 }} />\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Сучасна українська\r\n      лексикографія, відповідаючи вимогам інформаційного суспільства,\r\n      характеризується тенденцією цифрового представлення лексикографічних\r\n      даних. Керуючись актуальними завданнями й методами комп'ютерної\r\n      лінгвістики у галузі словникарства, колектив студентів-бакалаврів 3-го\r\n      курсу ОПП «Прикладна (комп'ютерна) лінгвістика та англійська мова»\r\n      Інституту філології Київського національного університету ім. Т. Шевченка\r\n      під керівництвом доцента кафедри української мови та прикладної\r\n      лінгвістики О. Зубань розпочав проект «Електронна версія словника «Активні\r\n      ресурси сучасної української номінації».`}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        className={classes.text}\r\n        ref={purposeRef}\r\n        gutterBottom\r\n      >\r\n        {`Мета проекту передбачає\r\n      організацію роботи у два етапи: 1) автоматичну конвертацію текстової\r\n      інформації у текстові дані: розроблення програмного забезпечення для\r\n      автоматичного укладання баз даних1 на матеріалі текстового файлу (формат\r\n      *.txt) словника «Активні ресурси сучасної української номінації»2 [1]; 2)\r\n      конструювання електронної версії словника: розроблення програмних запитів\r\n      до укладених баз даних і консольного інтерфейсу; розроблення\r\n      людино-машинного інтерфейсу з використанням web-дизайну. Конференційна\r\n      доповідь представляє результат першого етапу роботи – структуру баз даних\r\n      електронної версії Словника.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Словник «Активні ресурси сучасної української\r\n      номінації» ознаменував своїм виходом у 2013 році новий етап української\r\n      лексикографії – інтегральної неографії. «Мета Словника – описати нову\r\n      українську лексику, що виявляє системотвірні ознаки, здатність до творення\r\n      лексичних об’єднань: словотвірних гнізд і рядів, синонімічних рядів,\r\n      антонімічних опозицій (пар або тріад), демонструє широкий спектр\r\n      словосполук, а отже, виявляє розгалужені парадигматичні, синтагматичні й\r\n      епідигматичні (дериваційні) відношення в тексті та в системі мови» [1, c.\r\n      8]. Інтегральний характер Словника зумовив складність його макро- та\r\n      мікроструктури: словникова стаття об'єднує 7 зон, які у свою чергу\r\n      поділяються на підзони, а в деяких випадках підзони можуть структуруватися\r\n      на менші підзони до 4-го рівня ієрархії; крім того, словникові статті,\r\n      зони та підзони мають доповнювальні відношення у представленні\r\n      лінгвістичної інформації макроструктури Словника. Складна лексикографічна\r\n      модель Словника може бути значно спрощена для сприйняття та роботи\r\n      користувача, якщо текстову інформацію в електронній лексикографічній\r\n      системі представити окремими пошуковими зонами.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Конструювання електронної\r\n      версії Словника базується на інфологічній та датологічній моделі баз\r\n      даних, які передбачають структурацію на зони й підзони тексту Словника,\r\n      відповідно до зонного принципу подання інформації в комп'ютерних версіях\r\n      традиційних словників, розробленого Л. І. Колодяжною [4]. Текст словника\r\n      уже має зонний принцип будови, тому інфологічна модель будується дуже\r\n      просто: 1) на макрорівні вона відображає структуру Словника за розділами\r\n      змісту; 2) на мікрорівні вона відображає ієрархічну залежність зон і\r\n      підзон словникової статті. Особливістю даталогічного етапу є автоматична\r\n      конвертація текстової інформації у дані: автоматичне конструювання БД\r\n      електронної версії Словника.`}\r\n      </Typography>\r\n      <Typography\r\n        variant=\"body1\"\r\n        ref={correlationRef}\r\n        className={classes.text}\r\n        gutterBottom\r\n      >\r\n        {`За інфологічною моделлю макроструктури\r\n      Словника, яка представлена у змісті (6 інформаційних зон словника), було\r\n      створено даталогічну модель макроструктури, яка представляє 4 реляційні БД\r\n      (див. Табл.1). \r\n      `}\r\n      </Typography>\r\n      <CorrelationTable />\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Всі бази даних конструювалися автоматично за послідовністю\r\n      виконання трьох завдань: 1) створення таблиці БД за допомогою системи\r\n      керування базами даних SQLite3; 2) вилучення із тексту Словника (формат\r\n      *.txt) за допомогою розробленого програмного забезпечення мовою Pyton\r\n      текстової інформації і структурування цієї інформації на текстові частини:\r\n      перетворення текстової інформації у текстові дані; 3) «пакування» таблиці\r\n      БД: імпорт текстових даних у колонки таблиці.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Перші три БД (БД\r\n      «база_передмови», БД «умовні_позначення», БД «умовні_скорочення») мають\r\n      просту схему даних і кожна представлена однією таблицею, яка складається\r\n      із трьох полів: 1) ID – номер об'єкта БД; 2) назва об'єкта БД; 3) текст,\r\n      що відповідає пошуковому об'єкту.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`БД «база_передмови» виконуватиме\r\n      інформаційну функцію: знайомитиме користувача із лексикографічними\r\n      особливостями Словника, його джерельною базою, будовою, призначенням.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`БД «умовні_позначення» та БД «умовні_скорочення» будуть виконувати дві\r\n      функції: 1) інформаційну – тлумачення значення умовного позначення та\r\n      скорочення назви джерела; 2) інформаційно-навігаційну: кожне умовне\r\n      позначення чи скорочення при зустрічі у тексті електронної версії Словника\r\n      буде подано як гіперпосилання, до якого додаватиметься його пояснення.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Функціонально центральною в даталогічній моделі й найскладнішою за схемою\r\n      даних є БД «корпусСловника». Вона складається із 9-ти таблиць, між якими\r\n      встановлено зв'язок через поле ID – номер реєстрової одиниці, що в усіх\r\n      таблицях однаковий (див. Рис.1). \r\n      `}\r\n      </Typography>\r\n\r\n      <img\r\n        src={CorrelationImage}\r\n        alt=\"dependancies\"\r\n        className={classes.image}\r\n      />\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Рис.1. Реляційна діаграма схеми даних БД \"корпусСловника\"\r\n      </Typography>\r\n\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`БД «корпусСловника» виконує дві\r\n      функції: 1) систематизує текстові дані статей реєстрових одиниць Словника\r\n      [1, с. 22 – 360]; 2) забезпечує п'ять входів в електронний словник.`}\r\n      </Typography>\r\n      <StyledDivider />\r\n\r\n      <Typography variant=\"h5\" ref={manageRef} gutterBottom>\r\n        {`Систематизація текстових даних мікроструктури словника`}\r\n      </Typography>\r\n      <StyledDivider />\r\n\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Як демонструє\r\n      реляційна діаграма на рис. 1, центральною у БД є таблиця «Зони», що\r\n      систематизує текстові дані автоматичної сегментації тексту розділу «Корпус\r\n      словника»: 1) на статті (статтею вважаємо текстову інформацію про одну\r\n      одиницю реєстру (слово чи морфему) Словника від першої до сьомої зони\r\n      включно); 2) у межах кожної статті на зони (зонами вважаємо пронумеровані\r\n      у Словнику частини текстової інформації однієї статті від 1-ої до 7-ої).`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Таблиці «Зони_ЛСВ», «Підзони_6_Зони», «Підзони_7_Зони» БД «корпусСловника»\r\n      систематизують текстові дані про поділ 3-ої, 4-ої, 6-ої, 7-ої зон на\r\n      підзони (підзонами вважаємо частини текстової інформації кожної зони\r\n      статті, маркованої двома цифрами – 3.1., 3.2., 5.1., 5.2. і т. д.).`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Деякі\r\n      реєстрові одиниці Словника у межах зони 3 «Дефініція нова», а слово\r\n      зелений і в зоні 4 «Дефініція стара» мають декілька ЛСВ, які марковані\r\n      цифрами 3.1., 3.2., 3.3. або 4.1, 4.2. Важливо, що за цими ЛСВ закріплена\r\n      відповідна лінгвістична інформація у 5-ій зоні – синтагматика, 6-ій зоні –\r\n      парадигматика та 7-ій зоні – епідигматика. Для створення ефективного\r\n      пошуку і класифікації інформації в електронній лексикографічній системі,\r\n      було створено окрему таблицю «Зони_ЛСВ», в якій кожен ЛСВ реєстрової\r\n      одиниці представлений окремим рядком із відповідною до них інформацією\r\n      наступних 5-ої, 6-ої та 7-ої зон.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Кожна 6-та зона Словника «Парадигматичні\r\n      відношення реєстрової одиниці (парадигм)» може складатися із 5-ти підзон:\r\n      синоніми, антоніми, гіпоніми, гіпероніми та омоніми. З метою ефективного\r\n      пошуку за кожним із 5-ти типів лінгвістичної інформації цієї зони текстова\r\n      інформація 6-ої зони представлена у вигляді диференційованих текстових\r\n      даних (окремі колонки) таблиці «Підзони_6_Зони».`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Кожна 7-ма зона Словника\r\n      «Епідигматичні (дериваційні) відношення реєстрової одиниці (епідигм)» може\r\n      бути структурована на 3 підзони: 7.1. афікс – афіксальні прості похідні;\r\n      7.2. складсл – складні слова; 7.3. гра – мовна гра (каламбурне\r\n      словотворення). Відповідно до цих підзон конструюється таблиця\r\n      «Підзони_7_зони».`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Таблиця «Грам_коди» укладається вручну за даними\r\n      четвертої колонки «Зона_2» таблиці «Зони». У тексті Словника у 2-ій зоні\r\n      подано граматичний код словозміни реєстрового слова (наприклад, 2. грам ж,\r\n      -и, 1 О – код) за «Граматичним словником української літературної мови»\r\n      [2], який представлено в електронній версій на порталі mova.info [3]. Із\r\n      метою відображення моделі парадигми відмінювання реєстрового слова у\r\n      створюваній електронній лексикографічній системі укладається таблиця\r\n      «Грам_коди», яка поєднує граматичний код слова, взятий із 2-ї зони\r\n      словника «Активні ресурси сучасної української номінації», та модель\r\n      словозміни, що відповідає цьому коду в електронній версії «Граматичного\r\n      словника української літературної мови». Зв'язок граматичного коду із\r\n      моделлю словозміни забезпечує 4-та колонка таблиці «adresa», що подає\r\n      електронні адреси моделі словозміни електронної версії «Граматичного\r\n      словника української літературної мови».`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Таблиця «index_slіv» укладається\r\n      з метою поєднання розділу «Індекс слів», що подає список дериватів,\r\n      утворених на базі реєстрових одиниць, із контекстами вживання цих\r\n      дериватів у 7-ій зоні словникової статті «Епідигматичні (дериваційні)\r\n      відношення реєстрової одиниці (епідигм)».`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Таблиці «slovospoluky»,\r\n      «index_kontextna_slovospoluka», систематизують текстові дані розділу\r\n      «Індекс словосполук», у якому подано заголовкові слова, що входять до\r\n      реєстру Словника, та словосполучення, які ці слова утворюють в\r\n      ілюстративних текстах 5-ої зони словникової статті. Із цими таблицями\r\n      пов'язана таблиця «приклади», яка зв'язує контексти вживання\r\n      словосполучень, вилучені із 5-ої зони Словника, із реєстром\r\n      словосполучень. Зв'язок між таблицями «приклади» та\r\n      «index_kontextna_slovospoluka» здійснюється через 1-ше поле ID обох\r\n      таблиць, в яких номери словосполучень збігаються. Це дозволяє представити\r\n      однією константою (номером) різні тестові записи словосполучень:\r\n      препароване словосполучення таблиці «index_kontextna_slovospoluka» та\r\n      непрепароване словосполученя таблиці «приклади», наприклад: альтернатив (у\r\n      пошуках) → ID 2=ID 2 ← у пошуках альтернатив.`}\r\n      </Typography>\r\n      <StyledDivider />\r\n      <Typography variant=\"h5\" ref={entersRef} gutterBottom>\r\n        {`Входи в електронний словник`}\r\n      </Typography>\r\n      <StyledDivider />\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Макроструктура текстового варіанта Словника має три входи до словникових\r\n      статей: 1) за списком реєстрових одиниць розділу «Корпус словника» у\r\n      змісті Словника [1, 3-5]; 2) за списком реєстрових одиниць та дериватів,\r\n      утворених від реєстрових одиниць, у розділі «Індекс слів» [1, 360-388]; 3)\r\n      за списком реєстрових одиниць та словосполучень із цими одиницями у\r\n      розділі «Індекс словосполук» [1, 388 - 414]. В електронному варіанті\r\n      Словника ставиться завдання збільшити кількість входів до п'яти. Функції\r\n      п'ятьох входів в електронний словник виконуватимуть три центральні таблиці\r\n      БД «корпусСловника»: 1) таблиця «Зони» – основний вхід (1) за списком\r\n      реєстрових одиниць Словника (82 входи) до словникових статей; 2) таблиця\r\n      «index_slіv» – додатковий вхід (2) за заголовковою реєстровою одиницею\r\n      розділу «Індекс слів» до 7-ої зони Словника «Епідигматичні (дериваційні)\r\n      відношення реєстрової одиниці (епідигм)»; додатковий вхід (3) за\r\n      дериватами (2039 входів), утвореними від // за допомогою реєстрової\r\n      одиниці, до прикладів текстового вживання 7-ої зони; 3) таблиця\r\n      «index_kontextna_slovospoluka» – додатковий вхід (4) за заголовковою\r\n      реєстровою одиницею розділу «Індекс словосполук» до 5-ої зони Словника\r\n      «Синтагматичні відношення реєстрової одиниці (синтагм)»; додатковий вхід\r\n      (5) за словосполученням (1868 входів) до прикладів текстового вживання\r\n      5-ої зони.`}\r\n      </Typography>\r\n      <Typography variant=\"body1\" className={classes.text} gutterBottom>\r\n        {`Велика кількість таблиць БД «корпусСловника» зумовлена\r\n      автоматичним способом вилучення текстової інформації та імпорту текстових\r\n      даних, що спричинило дублювання текстової інформації у деяких полях\r\n      таблиць, тому на другому етапі конструювання електронної лексикографічної\r\n      системи – розроблення програмних запитів та створення консольного\r\n      інтерфейсу – кількість таблиць буде зменшена. Сьогодні колектив проекту\r\n      працює над цим завданням. Найближчим часом електронна версія словника\r\n      «Активні ресурси сучасної української номінації» буде представлена на\r\n      порталі mova.info. Учасники проекту щиро дякують колективу авторів\r\n      словника «Активні ресурси сучасної української номінації» за наданий\r\n      електронний варіант тексту Словника. `}\r\n      </Typography>\r\n      <StyledDivider ref={literatureRef} />\r\n\r\n      <LiteratureTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst StyledDivider = styled(Divider)`\r\n  height: 3px;\r\n  width: 70%;\r\n  margin: 30px auto;\r\n  background: #9bb4c5;\r\n  border-radius: 2px;\r\n`;\r\n\r\nexport default Article;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport styled from \"styled-components\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  stepper: {\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nfunction getSteps() {\r\n  return [\r\n    \"Передмова\",\r\n    \"Диференційні та інтегральні словники нової лексики\",\r\n    \"Джерельна база Словника\",\r\n    \"Критерії формування реєстру Словника\",\r\n    \"Будова Словника\",\r\n    \"Призначення Словника\",\r\n    \"Над словником працювали:\",\r\n  ];\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper({ handleClick }) {\r\n  const classes = useStyles();\r\n  const isSmall = useMediaQuery(\"(max-width:1000px)\");\r\n\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const steps = getSteps();\r\n\r\n  const handleScroll = (index) => {\r\n    setActiveStep(index);\r\n    handleClick(index);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.stepper}>\r\n      {!isSmall && (\r\n        <Stepper activeStep={activeStep} alternativeLabel nonLinear>\r\n          {steps.map((label, index) => (\r\n            <StyledStep key={label} onClick={() => handleScroll(index)}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </StyledStep>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst StyledStep = styled(Step)`\r\n  .MuiStepIcon-active {\r\n    fill: #012431 !important;\r\n  }\r\n  .MuiStepIcon-root {\r\n    fill: #9bb4c5;\r\n  }\r\n`;\r\n","import React, { useRef } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport preface from \"../../dataBase/preface.json\";\r\nimport Stepper from \"./Stepper\";\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 280,\r\n    width: \"90%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  tableName: {\r\n    verticalAlign: \"top\",\r\n  },\r\n  tableCell: {\r\n    textAlign: \"justify\",\r\n  },\r\n  component: {\r\n    overflowX: \"hidden\",\r\n  },\r\n});\r\n\r\nfunction createData(ID, name, text) {\r\n  return { ID, name, text };\r\n}\r\n\r\nconst rows = preface.map((item) => createData(...Object.values(item)));\r\n\r\nconst PrefaceTable = () => {\r\n  const classes = useStyles();\r\n  const refsList = [\r\n    { 0: useRef() },\r\n    { 1: useRef() },\r\n    { 2: useRef() },\r\n    { 3: useRef() },\r\n    { 4: useRef() },\r\n    { 5: useRef() },\r\n    { 6: useRef() },\r\n  ];\r\n\r\n  const handleClick = (id) => {\r\n    refsList[id][id].current.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"start\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Передмова</h1>\r\n      <Stepper handleClick={handleClick} />\r\n      <TableContainer component={Paper} className={classes.component}>\r\n        <Divider />\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableBody>\r\n            {rows.map((row, index) => (\r\n              <TableRow key={row.ID} ref={refsList[index][index]}>\r\n                <TableCell\r\n                  component=\"th\"\r\n                  scope=\"row\"\r\n                  className={classes.tableName}\r\n                >\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell className={classes.tableCell}>{row.text}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrefaceTable;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport styled from \"styled-components\";\r\n\r\nimport abbreviations from \"../../dataBase/abbreviations.json\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"first page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleBackButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"previous page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? (\r\n            <KeyboardArrowRight />\r\n          ) : (\r\n            <KeyboardArrowLeft />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"next page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? (\r\n            <KeyboardArrowLeft />\r\n          ) : (\r\n            <KeyboardArrowRight />\r\n          )}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"last page\"\r\n        >\r\n          {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(name, calories, fat) {\r\n  return { name, calories, fat };\r\n}\r\n\r\nconst rows = abbreviations.map((item) => createData(...Object.values(item)));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 280,\r\n    width: \"85%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  tableContainer: {\r\n    boxShadow: \"none\",\r\n  },\r\n});\r\n\r\nconst MarksTable = () => {\r\n  const classes = useStyles2();\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Умовні позначення</h1>\r\n      <StyledTableContainer\r\n        padding={isSmall ? \"3px\" : \"16px\"}\r\n        component={Paper}\r\n        className={classes.tableContainer}\r\n      >\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows\r\n            ).map((row) => (\r\n              <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell align=\"right\">{row.calories}</TableCell>\r\n                <TableCell align=\"right\">{row.fat}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={!isSmall && [5, 10, 15, { label: \"All\", value: -1 }]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </StyledTableContainer>\r\n    </>\r\n  );\r\n};\r\nconst StyledTableContainer = styled(TableContainer)`\r\n  .MuiTableCell-root {\r\n    padding: ${(prop) => prop.padding};\r\n  }\r\n`;\r\nexport default MarksTable;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 10,\r\n    borderRadius: 10\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"95.25%\",\r\n    borderRadius: 10\r\n  },\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n  avatar: {\r\n    backgroundColor: '#9bb4c5',\r\n  },\r\n}));\r\n\r\nexport default function ParticipantCard({ imageSrc, name, description }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n            {name.split(\"\")[0]}\r\n          </Avatar>\r\n          \r\n        }\r\n        title={name}\r\n        subheader=\"Студентка 4 курсу\"\r\n      />\r\n      <CardMedia className={classes.media} image={imageSrc} title={name} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {description}\r\n        </Typography>\r\n        \r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport AlinaImg from \"../../assets/Alina.jpg\";\r\nimport DanaImg from \"../../assets/Dana.jpg\";\r\nimport DashaImg from \"../../assets/Dasha.jpg\";\r\nimport NastiiaImg from \"../../assets/Nastiia.jpg\";\r\nimport ParticipantCard from \"./ParticipantCard\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n    borderRadius: 15,\r\n  },\r\n  image: {\r\n    objectFit: \"fill\",\r\n    width: \"90%\",\r\n    borderRadius: 15,\r\n  },\r\n  gridItem: {\r\n    display: \"flex\",\r\n    padding: 10,\r\n  },\r\n  grid: {\r\n    width: \"90%\",\r\n  },\r\n  divider: {\r\n    width: \"20%\",\r\n    height: 2,\r\n    marginBottom: 20,\r\n    backgroundColor: \"#9bb4c5\",\r\n  },\r\n}));\r\n\r\nexport default function CenteredGrid() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h1>Учасники проекту</h1>\r\n      <Divider className={classes.divider} />\r\n      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" align=\"center\">\r\n        Науковий керівник проекту: Зубань Оксана Миколаївна\r\n      </Typography>\r\n      <Grid container className={classes.grid}>\r\n        <Grid item xs={12} sm={6} className={classes.gridItem}>\r\n          <ParticipantCard\r\n            imageSrc={AlinaImg}\r\n            name=\"Аліна Гарбіч\"\r\n            description=\"Спеціальність: 'Прикладна лінгвістика та англійська мова'. Брала участь у створенні баз даних, розбитих на зони.\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={classes.gridItem}>\r\n          <ParticipantCard\r\n            imageSrc={DanaImg}\r\n            name=\"Богдана Романюк\"\r\n            description=\"Спеціальність: 'Прикладна лінгвістика та англійська мова'. Брала участь у створенні баз даних, розбитих на зони.\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={classes.gridItem}>\r\n          <ParticipantCard\r\n            imageSrc={DashaImg}\r\n            name=\"Дар'я Новікова\"\r\n            description=\"Спеціальність: 'Прикладна лінгвістика та англійська мова'. Брала участь у створенні баз даних, розбитих на зони.\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} className={classes.gridItem}>\r\n          <ParticipantCard\r\n            imageSrc={NastiiaImg}\r\n            name=\"Анастасія Єсипенко\"\r\n            description=\"Спеціальність: 'Прикладна лінгвістика та англійська мова'. Створювала веб-сайт для представлення матеріалів.\"\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styled from \"styled-components\";\r\nimport { truncate } from \"lodash\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport gramDict from \"../../dataBase/gramCodes.json\";\r\nimport corpus6 from \"../../dataBase/corpus6zone.json\";\r\nimport corpus7 from \"../../dataBase/corpus7zone.json\";\r\n\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  cell: {\r\n    verticalAlign: \"top\",\r\n  },\r\n});\r\n\r\nconst CorpusRow = ({ row = {} }) => {\r\n  const [rowOpen, setRowOpen] = useState(false);\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n\r\n  const classes = useStyles();\r\n  const lsvRow = gramDict.find((item) => item.ID_slova === row.id);\r\n  const sixRow = corpus6.filter((item) => item.id === row.id);\r\n  const sevenRow = corpus7.filter((item) => item.id === row.id);\r\n\r\n  const newDefRows = row.newDef && row.newDef.split(/3\\.2\\. /g);\r\n  const oldDefRows = row.oldDef && row.oldDef.split(/4\\.2\\. /g);\r\n  const syntagmRows =\r\n    row.syntagm &&\r\n    row.syntagm.split(/\\(в значенні 3.2\\.\\) |\\(за значенням 3.2\\.\\)/);\r\n\r\n  return (\r\n    <>\r\n      {row.register && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"register\"\r\n              ? setRowOpen(undefined)\r\n              : setRowOpen(\"register\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Реєстрова одиниця:\r\n          </TableCell>\r\n          <TableCell align={rowOpen === \"register\" ? \"justify\" : \"right\"}>\r\n            {rowOpen === \"register\"\r\n              ? row.register.replace(\"1. \", \"\")\r\n              : truncate(row.register.replace(\"1. \", \"\"), {\r\n                  length: 50,\r\n                  separator: \" \",\r\n                })}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n      {row.gram && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"gram\" ? setRowOpen(undefined) : setRowOpen(\"gram\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Граматична інформація:\r\n          </TableCell>\r\n          <TableCell align=\"right\">\r\n            {lsvRow ? (\r\n              <a href={lsvRow.adresa}>{row.gram.replace(\"2. грам \", \"\")}</a>\r\n            ) : (\r\n              row.gram.replace(\"2. грам \", \"\")\r\n            )}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n      {row.newDef && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"defNew\" ? setRowOpen(undefined) : setRowOpen(\"defNew\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Дефініція нова:\r\n          </TableCell>\r\n          <TableCell align={rowOpen === \"defNew\" ? \"justify\" : \"right\"}>\r\n            {newDefRows[1] && newDefRows[0].includes(\"3.1.\") && (\r\n              <>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  <strong>3.1. </strong>\r\n                  {rowOpen === \"defNew\"\r\n                    ? newDefRows[0].replace(\"3. дефн 3.1. \", \"\")\r\n                    : truncate(newDefRows[0].replace(\"3. дефн 3.1. \", \"\"), {\r\n                        length: 50,\r\n                        separator: \" \",\r\n                      })}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <strong>3.2. </strong>\r\n                  {rowOpen === \"defNew\"\r\n                    ? newDefRows[1]\r\n                    : truncate(newDefRows[1], {\r\n                        length: 50,\r\n                        separator: \" \",\r\n                      })}\r\n                </Typography>\r\n              </>\r\n            )}\r\n            {newDefRows[0] && !newDefRows[0].includes(\"3.1.\") && (\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {rowOpen === \"defNew\"\r\n                  ? newDefRows[0].replace(\"3. дефн \", \"\")\r\n                  : truncate(newDefRows[0].replace(\"3. дефн \", \"\"), {\r\n                      length: 50,\r\n                      separator: \" \",\r\n                    })}\r\n              </Typography>\r\n            )}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n      {row.oldDef && row.oldDef !== \"-\" && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"defOld\" ? setRowOpen(undefined) : setRowOpen(\"defOld\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Дефініція стара:\r\n          </TableCell>\r\n          <TableCell align={rowOpen === \"defOld\" ? \"justify\" : \"right\"}>\r\n            {oldDefRows[1] && oldDefRows[0].includes(\"4.1.\") && (\r\n              <>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  <strong>4.1. </strong>\r\n                  {rowOpen === \"defOld\"\r\n                    ? oldDefRows[0].replace(\"4. дефс\\n4.1. \", \"\")\r\n                    : truncate(oldDefRows[0].replace(\"4. дефс\\n4.1. \", \"\"), {\r\n                        length: 50,\r\n                        separator: \" \",\r\n                      })}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <strong>4.2. </strong>\r\n                  {rowOpen === \"defOld\"\r\n                    ? oldDefRows[1]\r\n                    : truncate(oldDefRows[1], {\r\n                        length: 50,\r\n                        separator: \" \",\r\n                      })}\r\n                </Typography>\r\n              </>\r\n            )}\r\n            {oldDefRows[0] && !oldDefRows[0].includes(\"4.1.\") && (\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {rowOpen === \"defOld\"\r\n                  ? oldDefRows[0].replace(\"4. дефс\", \"\")\r\n                  : truncate(oldDefRows[0].replace(\"4. дефс\", \"\"), {\r\n                      length: 50,\r\n                      separator: \" \",\r\n                    })}\r\n              </Typography>\r\n            )}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n      {row.syntagm && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"syntagm\"\r\n              ? setRowOpen(undefined)\r\n              : setRowOpen(\"syntagm\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Синтагматичні відношення реєстрової одиниці:\r\n          </TableCell>\r\n          <TableCell align={rowOpen === \"syntagm\" ? \"justify\" : \"right\"}>\r\n            {syntagmRows[1] && (\r\n              <>\r\n                <Typography variant=\"body2\" gutterBottom>\r\n                  <strong>За значенням 3.1. </strong>\r\n                  {rowOpen === \"syntagm\"\r\n                    ? syntagmRows[0].replace(\r\n                        /5. синтагм |\\(в значенні 3.1\\.\\) |\\(за значенням 3.1\\.\\) /g,\r\n                        \"\"\r\n                      )\r\n                    : truncate(\r\n                        syntagmRows[0].replace(\r\n                          /5. синтагм |\\(в значенні 3.1\\.\\) |\\(за значенням 3.1\\.\\) /g,\r\n                          \"\"\r\n                        ),\r\n                        {\r\n                          length: 50,\r\n                          separator: \" \",\r\n                        }\r\n                      )}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                  <strong>За значенням 3.2. </strong>\r\n                  {rowOpen === \"syntagm\"\r\n                    ? syntagmRows[1]\r\n                    : truncate(syntagmRows[1], {\r\n                        length: 50,\r\n                        separator: \" \",\r\n                      })}\r\n                </Typography>\r\n              </>\r\n            )}\r\n            {syntagmRows[0] && !syntagmRows[1] && (\r\n              <Typography variant=\"body2\" gutterBottom>\r\n                {rowOpen === \"syntagm\"\r\n                  ? syntagmRows[0].replace(\"5. синтагм \", \"\")\r\n                  : truncate(syntagmRows[0].replace(\"5. синтагм \", \"\"), {\r\n                      length: 50,\r\n                      separator: \" \",\r\n                    })}\r\n              </Typography>\r\n            )}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n      {sixRow && sixRow.length > 0 && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"paradygm\"\r\n              ? setRowOpen(undefined)\r\n              : setRowOpen(\"paradygm\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Парадигматичні відношення:\r\n          </TableCell>\r\n          <TableCell align={rowOpen === \"paradygm\" ? \"justify\" : \"right\"}>\r\n            {sixRow.map((item, index) => (\r\n              <>\r\n                {item[\"СИНОНІМИ\"] && item[\"СИНОНІМИ\"] !== \"-\" && (\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    <strong>{`${index + 1}) `}</strong>\r\n                    <strong>Синоніми: </strong>\r\n                    {rowOpen === \"paradygm\"\r\n                      ? item[\"СИНОНІМИ\"].replace(\"синоніми: \", \"\")\r\n                      : truncate(item[\"СИНОНІМИ\"].replace(\"синоніми: \", \"\"), {\r\n                          length: 50,\r\n                          separator: \" \",\r\n                        })}\r\n                  </Typography>\r\n                )}\r\n                {rowOpen === \"paradygm\" &&\r\n                  item[\"АНТОНІМИ\"] &&\r\n                  item[\"АНТОНІМИ\"] !== \"-\" && (\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Антоніми: </strong>\r\n                      {item[\"АНТОНІМИ\"].replace(\"антоніми: \", \"\")}\r\n                    </Typography>\r\n                  )}\r\n                {rowOpen === \"paradygm\" &&\r\n                  item[\"ГІПОНІМИ\"] &&\r\n                  item[\"ГІПОНІМИ\"] !== \"-\" && (\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Гіпоніми: </strong>\r\n                      {item[\"ГІПОНІМИ\"].replace(\"гіпоніми: \", \"\")}\r\n                    </Typography>\r\n                  )}\r\n                {rowOpen === \"paradygm\" &&\r\n                  item[\"ГІПЕРОНІМИ\"] &&\r\n                  item[\"ГІПЕРОНІМИ\"] !== \"-\" && (\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>Гіпероніми: </strong>\r\n                      {item[\"ГІПЕРОНІМИ\"].replace(\"гіпероніми: \", \"\")}\r\n                    </Typography>\r\n                  )}\r\n                {rowOpen === \"paradygm\" &&\r\n                  item[\"ОМОНІМИ\"] &&\r\n                  item[\"ОМОНІМИ\"] !== \"-\" && (\r\n                    <Typography variant=\"body2\" gutterBottom>\r\n                      <strong>ОмонімиЖ </strong>\r\n                      {item[\"ОМОНІМИ\"].replace(\"осоніми: \", \"\")}\r\n                    </Typography>\r\n                  )}\r\n              </>\r\n            ))}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n      {sevenRow && sevenRow.length > 0 && (\r\n        <StyledTableRow\r\n          padding={isSmall ? \"10px\" : \"16px\"}\r\n          key={uuidv4()}\r\n          onClick={() =>\r\n            rowOpen === \"epidygm\"\r\n              ? setRowOpen(undefined)\r\n              : setRowOpen(\"epidygm\")\r\n          }\r\n          style={{ cursor: \"pointer\" }}\r\n        >\r\n          <TableCell className={classes.cell} align=\"left\">\r\n            Епідигматичні (дериваційні) відношення:\r\n          </TableCell>\r\n          <TableCell align={rowOpen === \"epidygm\" ? \"justify\" : \"right\"}>\r\n            {sevenRow.map((item, index) => (\r\n              <>\r\n                {item[\"АФІКС\"] && item[\"АФІКС\"] !== \"-\" && (\r\n                  <Typography variant=\"body2\" gutterBottom>\r\n                    <strong>{`${index + 1}) `}</strong>\r\n                    <strong>Словотворчі афікси </strong>\r\n                    {rowOpen === \"epidygm\"\r\n                      ? item[\"АФІКС\"].replace(\"афікс \", \"\")\r\n                      : truncate(item[\"АФІКС\"].replace(\"афікс \", \"\"), {\r\n                          length: 50,\r\n                          separator: \" \",\r\n                        })}\r\n                  </Typography>\r\n                )}\r\n                {item[\"СКЛАДСЛ\"] && item[\"СКЛАДСЛ\"] !== \"-\" && (\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Складні слова </strong>\r\n                    {rowOpen === \"epidygm\"\r\n                      ? item[\"СКЛАДСЛ\"].replace(\"складсл\", \"\")\r\n                      : truncate(item[\"СКЛАДСЛ\"].replace(\"складсл\", \"\"), {\r\n                          length: 50,\r\n                          separator: \" \",\r\n                        })}\r\n                  </Typography>\r\n                )}\r\n                {item[\"ГРА\"] && item[\"ГРА\"] !== \"-\" && (\r\n                  <Typography variant=\"body2\">\r\n                    <strong>Мовна гра </strong>\r\n                    {rowOpen === \"epidygm\"\r\n                      ? item[\"ГРА\"].replace(\"усіч \", \"\")\r\n                      : truncate(item[\"ГРА\"].replace(\"усіч \", \"\"), {\r\n                          length: 50,\r\n                          separator: \" \",\r\n                        })}\r\n                  </Typography>\r\n                )}\r\n              </>\r\n            ))}\r\n          </TableCell>\r\n        </StyledTableRow>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledTableRow = styled(TableRow)`\r\n  .MuiTableCell-root {\r\n    padding: ${(prop) => prop.padding};\r\n  }\r\n`;\r\n\r\nexport default CorpusRow;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport ArrowDropUpRoundedIcon from \"@material-ui/icons/ArrowDropUpRounded\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport corpus from \"../../dataBase/zone.json\";\r\nimport CorpusRow from \"./CorpusRow\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(\r\n  id,\r\n  word,\r\n  register,\r\n  gram,\r\n  newDef,\r\n  oldDef,\r\n  syntagm,\r\n  paradygm,\r\n  epidygm\r\n) {\r\n  return {\r\n    id,\r\n    word,\r\n    register,\r\n    gram,\r\n    newDef,\r\n    oldDef,\r\n    syntagm,\r\n    epidygm,\r\n    paradygm,\r\n  };\r\n}\r\n\r\nconst rows = corpus.map((item) => createData(...Object.values(item)));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 280,\r\n    width: \"85%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  tableContainer: {\r\n    boxShadow: \"none\",\r\n  },\r\n});\r\n\r\nconst CorpusTable = () => {\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n\r\n  const [isRowVisibleId, setRowVisibleId] = useState(undefined);\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Корпус словника</h1>\r\n      <TableContainer component={Paper} className={classes.tableContainer}>\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows\r\n            ).map((row) => (\r\n              <>\r\n                <TableRow\r\n                  key={row.id}\r\n                  onClick={() =>\r\n                    isRowVisibleId === row.id\r\n                      ? setRowVisibleId(undefined)\r\n                      : setRowVisibleId(row.id)\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">\r\n                    {row.word}\r\n                    {isRowVisibleId === row.id ? (\r\n                      <ArrowDropUpRoundedIcon\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setRowVisibleId(undefined)}\r\n                      />\r\n                    ) : (\r\n                      <ArrowDropDownRoundedIcon\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setRowVisibleId(row.id)}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n                {isRowVisibleId === row.id && <CorpusRow row={row} />}\r\n              </>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={\r\n                  !isSmall && [5, 10, 15, { label: \"All\", value: -1 }]\r\n                }\r\n                colSpan={2}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={\r\n                  !isSmall && {\r\n                    inputProps: { \"aria-label\": \"rows per page\" },\r\n                    native: true,\r\n                  }\r\n                }\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CorpusTable;\r\n","import React, { useState } from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport styled from \"styled-components\";\r\n\r\nimport combinations from \"../../dataBase/exampleSourse.json\";\r\n\r\nconst WordCombinationsRow = ({ row }) => {\r\n  const [openedRow, setopenedRow] = useState(undefined);\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n\r\n  const wordIndexRow = combinations.filter(\r\n    (item) => item.id_head_slovospoluka === row.id\r\n  );\r\n\r\n  return wordIndexRow.map((row) => (\r\n    <StyledTableRow\r\n      padding={isSmall ? \"3px\" : \"16px\"}\r\n      key={uuidv4()}\r\n      onClick={() =>\r\n        openedRow === row.id ? setopenedRow(undefined) : setopenedRow(row.id)\r\n      }\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <TableCell colSpan={1}>{row.kontext}</TableCell>\r\n      {openedRow !== row.id && (\r\n        <>\r\n          <TableCell align=\"right\">Показати приклад</TableCell>\r\n          <TableCell>\r\n            <VisibilityOffRoundedIcon />\r\n          </TableCell>\r\n        </>\r\n      )}\r\n      {openedRow === row.id && (\r\n        <>\r\n          {isSmall ? (\r\n            <TableCell colSpan={2}>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">Приклад</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">{row.pryklad}</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">Джерело</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">{row.drzerelo}</TableCell>\r\n              </TableRow>\r\n            </TableCell>\r\n          ) : (\r\n            <>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">Приклад</TableCell>\r\n                <TableCell>Джерело</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">{row.pryklad}</TableCell>\r\n                <TableCell>{row.drzerelo}</TableCell>\r\n              </TableRow>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </StyledTableRow>\r\n  ));\r\n};\r\n\r\nconst StyledTableRow = styled(TableRow)`\r\n  .MuiTableCell-root {\r\n    padding: ${(prop) => prop.padding};\r\n  }\r\n`;\r\n\r\nexport default WordCombinationsRow;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport ArrowDropUpRoundedIcon from \"@material-ui/icons/ArrowDropUpRounded\";\r\nimport styled from \"styled-components\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport corpus from \"../../dataBase/zone.json\";\r\nimport WordCombinationsIndexRow from \"./WordCombinationsRow\";\r\nimport combinations from \"../../dataBase/exampleSourse.json\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(\r\n  id,\r\n  word,\r\n  register,\r\n  gram,\r\n  newDef,\r\n  oldDef,\r\n  syntagm,\r\n  paradygm,\r\n  epidygm\r\n) {\r\n  return {\r\n    id,\r\n    word,\r\n    register,\r\n    gram,\r\n    newDef,\r\n    oldDef,\r\n    syntagm,\r\n    epidygm,\r\n    paradygm,\r\n  };\r\n}\r\n\r\nconst filteredCorpus = corpus.filter(corpWord => combinations.find(combWord => combWord.id_head_slovospoluka === corpWord.id));\r\nconst rows = filteredCorpus.map((item) => createData(...Object.values(item)));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 270,\r\n    width: \"85%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  tableContainer: {\r\n    boxShadow: \"none\",\r\n  },\r\n});\r\n\r\n\r\n\r\nconst CorpusTable = () => {\r\n  const [isRowVisibleId, setRowVisibleId] = useState(undefined);\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Індекс словосполук</h1>\r\n      <StyledTableContainer padding={isSmall ? \"3px\" : \"16px\"} component={Paper} className={classes.tableContainer}>\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows\r\n            ).map((row) => (\r\n              <>\r\n                <TableRow\r\n                  key={row.id}\r\n                  onClick={() =>\r\n                    isRowVisibleId === row.id\r\n                      ? setRowVisibleId(undefined)\r\n                      : setRowVisibleId(row.id)\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.word}</TableCell>\r\n                  <TableCell>\r\n                    {isRowVisibleId === row.id ? (\r\n                      <ArrowDropUpRoundedIcon\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setRowVisibleId(undefined)}\r\n                      />\r\n                    ) : (\r\n                      <ArrowDropDownRoundedIcon\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setRowVisibleId(row.id)}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n                {isRowVisibleId === row.id && (\r\n                  <WordCombinationsIndexRow row={row} />\r\n                )}\r\n              </>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={!isSmall && [5, 10, 15, { label: \"All\", value: -1 }]}\r\n                colSpan={2}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </StyledTableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledTableContainer = styled(TableContainer)`\r\n  .MuiTableCell-root {\r\n    padding: ${(prop) => prop.padding};\r\n  }\r\n`;\r\n\r\nexport default CorpusTable;\r\n","import React, { useState } from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport VisibilityOffRoundedIcon from \"@material-ui/icons/VisibilityOffRounded\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport styled from \"styled-components\";\r\n\r\nimport wordIndex from \"../../dataBase/indexSliv.json\";\r\n\r\nconst WordIndexRow = ({ row }) => {\r\n  const [openedRow, setopenedRow] = useState(undefined);\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n\r\n  const wordIndexRow = wordIndex.filter(\r\n    (item) => item.id_head_slovospoluka === row.id\r\n  );\r\n\r\n  return wordIndexRow.map((row) => (\r\n    <StyledTableRow\r\n      padding={isSmall ? \"3px\" : \"16px\"}\r\n      key={uuidv4()}\r\n      onClick={() =>\r\n        openedRow === row.ID ? setopenedRow(undefined) : setopenedRow(row.ID)\r\n      }\r\n      style={{ cursor: \"pointer\" }}\r\n    >\r\n      <TableCell colSpan={1}>{row.deryvat}</TableCell>\r\n      {openedRow !== row.ID && (\r\n        <>\r\n          <TableCell align=\"right\">Показати приклад</TableCell>\r\n          <TableCell>\r\n            <VisibilityOffRoundedIcon />\r\n          </TableCell>\r\n        </>\r\n      )}\r\n      {openedRow === row.ID && (\r\n        <>\r\n          {isSmall ? (\r\n            <TableCell colSpan={2}>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">Приклад</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">{row.pryklad}</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">Джерело</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">{row.drzerelo}</TableCell>\r\n              </TableRow>\r\n            </TableCell>\r\n          ) : (\r\n            <>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">Приклад</TableCell>\r\n                <TableCell>Джерело</TableCell>\r\n              </TableRow>\r\n              <TableRow key={uuidv4()}>\r\n                <TableCell align=\"right\">{row.pryklad}</TableCell>\r\n                <TableCell>{row.drzerelo}</TableCell>\r\n              </TableRow>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </StyledTableRow>\r\n  ));\r\n};\r\n\r\nconst StyledTableRow = styled(TableRow)`\r\n  .MuiTableCell-root {\r\n    padding: ${(prop) => prop.padding};\r\n  }\r\n`;\r\n\r\nexport default WordIndexRow;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\r\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\r\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\r\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\r\nimport ArrowDropDownRoundedIcon from \"@material-ui/icons/ArrowDropDownRounded\";\r\nimport ArrowDropUpRoundedIcon from \"@material-ui/icons/ArrowDropUpRounded\";\r\nimport styled from \"styled-components\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport corpus from \"../../dataBase/zone.json\";\r\nimport WordIndexRow from \"./WordIndexRow\";\r\n\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleBackButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"previous page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowRight />\r\n        ) : (\r\n          <KeyboardArrowLeft />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? (\r\n          <KeyboardArrowLeft />\r\n        ) : (\r\n          <KeyboardArrowRight />\r\n        )}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction createData(\r\n  id,\r\n  word,\r\n  register,\r\n  gram,\r\n  newDef,\r\n  oldDef,\r\n  syntagm,\r\n  paradygm,\r\n  epidygm\r\n) {\r\n  return {\r\n    id,\r\n    word,\r\n    register,\r\n    gram,\r\n    newDef,\r\n    oldDef,\r\n    syntagm,\r\n    epidygm,\r\n    paradygm,\r\n  };\r\n}\r\n\r\nconst rows = corpus.map((item) => createData(...Object.values(item)));\r\n\r\nconst useStyles2 = makeStyles({\r\n  table: {\r\n    minWidth: 280,\r\n    width: \"85%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  tableContainer: {\r\n    boxShadow: \"none\",\r\n  },\r\n});\r\n\r\nconst CorpusTable = () => {\r\n  const [isRowVisibleId, setRowVisibleId] = useState(undefined);\r\n  const isSmall = useMediaQuery(\"(max-width:800px)\");\r\n  const classes = useStyles2();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Індекс слів</h1>\r\n      <StyledTableContainer padding={isSmall ? \"3px\" : \"16px\"} component={Paper} className={classes.tableContainer}>\r\n        <Table className={classes.table} aria-label=\"custom pagination table\">\r\n          <TableBody>\r\n            {(rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows\r\n            ).map((row) => (\r\n              <>\r\n                <TableRow\r\n                  key={row.id}\r\n                  onClick={() =>\r\n                    isRowVisibleId === row.id\r\n                      ? setRowVisibleId(undefined)\r\n                      : setRowVisibleId(row.id)\r\n                  }\r\n                  style={{ cursor: \"pointer\" }}\r\n                >\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.id}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.word}</TableCell>\r\n                  <TableCell>\r\n                    {isRowVisibleId === row.id ? (\r\n                      <ArrowDropUpRoundedIcon\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setRowVisibleId(undefined)}\r\n                      />\r\n                    ) : (\r\n                      <ArrowDropDownRoundedIcon\r\n                        style={{ cursor: \"pointer\" }}\r\n                        onClick={() => setRowVisibleId(row.id)}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n                {isRowVisibleId === row.id && <WordIndexRow row={row} />}\r\n              </>\r\n            ))}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={!isSmall && [5, 10, 15, { label: \"All\", value: -1 }]}\r\n                colSpan={2}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { \"aria-label\": \"rows per page\" },\r\n                  native: true,\r\n                }}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </StyledTableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nconst StyledTableContainer = styled(TableContainer)`\r\n  .MuiTableCell-root {\r\n    padding: ${(prop) => prop.padding};\r\n  }\r\n`;\r\n\r\nexport default CorpusTable;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport styled from \"styled-components\";\r\nimport { Route, useLocation } from \"react-router-dom\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\n\r\nimport Article from \"../../pages/main/Article\";\r\nimport PrefaceTable from \"../../pages/introductory/PrefaceTable\";\r\nimport MarksTable from \"../../pages/marks/MarksTable\";\r\nimport Participants from \"../../pages/participants/Participants\";\r\nimport CorpusTable from \"../../pages/corpus/CorpusTable\";\r\nimport WordCombinationsTable from \"../../pages/wordCombinations/WordCombinationsTable\";\r\nimport WordIndexTable from \"../../pages/wordIndex/WordIndexTable\";\r\nimport PagesCarousel from \"../VocabularyPages/VocabularyPages\";\r\n\r\n\r\nfunction App() {\r\n  const isLarge = useMediaQuery(\"(min-width:1200px)\");\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    lightBox: {\r\n      overflowY: \"auto\",\r\n    },\r\n    root: {\r\n      flexGrow: 1,\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      height: \"calc(100vh - 80px)\",\r\n    },\r\n    paper: {\r\n      width: isLarge ? \"70%\" : \"100%\",\r\n      height: \"calc(100vh - 80px)\",\r\n      overflow: \"auto\",\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n      alignItems: \"center\",\r\n      overflowX: 'hidden'\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <Route exact path=\"/\">\r\n        <Grow in={pathname === \"/\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <LightBox className={classes.lightBox}>\r\n              <Article />\r\n            </LightBox>\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/introductory\">\r\n        <Grow in={pathname === \"/introductory\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <PrefaceTable />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/marks\">\r\n        <Grow in={pathname === \"/marks\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <MarksTable />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/participants\">\r\n        <Grow in={pathname === \"/participants\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <Participants />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/index/wordCombinations\">\r\n        <Grow in={pathname === \"/index/wordCombinations\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <WordCombinationsTable />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/index/words\">\r\n        <Grow in={pathname === \"/index/words\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <WordIndexTable />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/corpus\">\r\n        <Grow in={pathname === \"/corpus\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n            <CorpusTable />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n      <Route path=\"/pages\">\r\n        <Grow in={pathname === \"/pages\"}>\r\n          <Paper elevation={4} className={classes.paper}>\r\n          <PagesCarousel />\r\n          </Paper>\r\n        </Grow>\r\n      </Route>\r\n    </>\r\n  );\r\n}\r\n\r\nconst LightBox = styled(Grid)`\r\n  ::-webkit-scrollbar {\r\n    width: 0px;\r\n  }\r\n`;\r\n\r\nexport default App;\r\n","import React, { useState } from \"react\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport styled from \"styled-components\";\nimport { HashRouter, Switch } from \"react-router-dom\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\n\nimport theme from \"./components/styled/theme\";\nimport Layout from \"./components/Layout/Layout\";\nimport PagesCarousel from \"./components/VocabularyPages/VocabularyPages\";\nimport Routing from \"./components/Routing/Routing\";\n\nconst useStyles = makeStyles((theme) => ({\n  lightBox: {\n    background: \"#f2f8f1\",\n    overflowY: \"auto\",\n    padding: 50,\n    width: \"70%\",\n  },\n  root: {\n    flexGrow: 1,\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    height: \"calc(100vh - 80px)\",\n  },\n  pages: {\n    width: \"30%\",\n  },\n}));\n\nfunction App() {\n  const [open, setOpen] = useState(false);\n  const classes = useStyles();\n  const isLarge = useMediaQuery('(min-width:1200px)');\n\n  return (\n    <ThemeProvider theme={theme}>\n      <HashRouter basename=\"/\">\n        <StyledLayout open={open} setOpen={setOpen}>\n          <Root className={classes.root}>\n            <Switch>\n              <Routing />\n            </Switch>\n            {isLarge && (\n              <Grid className={classes.pages}>\n                <PagesCarousel />\n              </Grid>\n            )}\n          </Root>\n        </StyledLayout>\n      </HashRouter>\n    </ThemeProvider>\n  );\n}\n\nconst StyledLayout = styled(Layout)``;\n\nconst Root = styled.div``;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}